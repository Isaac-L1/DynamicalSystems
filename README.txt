-----------------
Dynamical Systems
-----------------

This repository contains data and code pertaining to the Dynamical Systems research currently being conducted by Dr J Creaser and Isaac Lee. All code has been written
specifically for that purpose, except for the code contained in 'example_code', this was written for a different paper with a different model (a Hopf node model); as
well as the data contained in 'Phase-Plane-and-Slope-Field-master', this is an open source matlab app downloaded from https://uk.mathworks.com/matlabcentral/fileexchange/61636-pplane

-----------------

It is worth noting that any code marked as UNFINISHED or EARLY may not be at maximum functionality as it may have been written before I gained a full conceptual
understanding of the underlying principles or may have remained unfinished as it became redundant before completion.

-----------------

Explanation of file structure:

- Bifurcation_Diagrams: This folder contains all the figures and code to produce the coco bifurcation diagrams for the two node case. - NOTE coco must be installed on the system for these to operate correctly.
	- data: contains coco-generated data
	- figs: contains figures generated by the code in this folder.
	
- example_code: Contains the two pieces of example code provided by Dr Creaser for the Hopf node case.

- FourNode: Contains the simulation data performed on the four node case.

- General: Contains the general functions which can be adapted to most cases. - NOTE for some of the scripts in this project to run, you may need to include this folder in your matlab search path
	- genReal: generates a realisation for a general system. Read function header for parameters and outputs
	- getEsc: gets escape times for a general system. Read function header for parameters and outputs
	- getEsc2: implements the same function as getEsc but with built in paralellisation to optimize runtime - UNFINISHED
	- getescesc & getescesc2: same functions as their namesake but in script form to aid in testing and tweaking - EARLY
	- nrfgen: function to use NewtonRaphson to find function fixed points - UNFINISHED

- MoreNode: contains simulation data for any system larger than four nodes

- OneNode: contains any data related to a onenode case including the following:
	- Accuracy: code and figures for the analysis of accuracy under variation of number of realisations and step size
	- Kramers: code and figures for testing whether or not height/distance of wells affect escape times (Kramers law)
	- PotentialLandscapes: code and figures plotting OneNode potential landscapes
	- Sims: contains code and figures for computing single node escape times and realisations

- Phase-Plane-and-Slope-Field-master: a self-contained implementation of the pplane app for matlab

- ResearchPapers: contains the research papers used for the project

- ThreeNode: contains any data related to a threenode case including the following:
	- sanity_sim: data testing my code against the data produced in Dr Creasers paper, (bistable)
	- code to produce realisations and escape times (and vectorised counterparts to test for runtime efficiency boost)

- TwoNode: contains any data related to a twonode case including the following:
	- BifDiagSims: contains sims and plots related to the bifurcation diagrams above
	- BxV_symmetric: contains earlier simulations looking at modifying the coupling strength and excitability in a bidirectionally coupled, symmetric system
	- ChangingBetaFigs: contains faceted potential landscapes for homogeneous excitabilities with different strength bidirectional coupling (NOTE: many of the realisations in this folder are plotted the inverse direction)
	- data: coco-generated data
	- DeltaNu: contains code used to generate escape times in the meannu-deltanu model. also contains sample code for my error handling and email systems
	- PotentialLandscapes: Contains any code/figures that plot a potential landscape for the twonode case for example:
		- data: coco-data
		- nrfunc.m: uses newton-raphson to find equilibria in a twonode system
		- TN_bidir_full: code to generate potential-landscape, equilbria, realisations and unstable manifolds on the same graph
		- TN_bidir_full_facet: same as TN_bidir_full, but plots are in a tiled layout for analysis of different parameters
		- TN_surface: generates a potential landscape alone
		- unstable_manifolds: code segments used to find unstable manifolds starting with the unstable eigenvector and running a trajectory
	- sims: data from simulations:
		- deltaNu: data from the meanNu-deltaNu simulation
			- *.csv: data files, read and formatted by readfiles.m
			- bisectn.m: code to find fixed points with a bisection method
			- datatable.mat: results from this sim stored in a matlab table
			- eqfacet: faceted graphs showing equilibria and realisations
			- Equilibria: uses nrfuncuni to find equilibria and produces the figures:
		- sanity2: testing data from the twonode case using the same code as our three node sanity simulation
		- sim1: first simulation using differnt betas and nus to test coefficients of variations
			- *.csv: data read by readfiles.m and analysed in sims_analysis.m
	- UncoupledSimFigs: Data and figures from the start of the twonode case where we looked at uncoupled nodes - EARLY
	- UnusedData: contains unanalysed data from simulations that became superfluous before they completed.
	- *.m: code generating escape times and realisations for the two node case.

	
